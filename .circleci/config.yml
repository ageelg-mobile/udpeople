version: 2.1


orbs:
  slack: circleci/slack@4.3.1

default_image: &docker
  docker:
    - image: circleci/node:13.8.0

jobs:

  notify:
      docker:
        - image: 'cimg/base:stable'
      steps:
        - slack/notify:
            custom: |
              {
                "blocks": [
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "plain_text",
                        "text": "*This is a text notification*",
                        "emoji": true
                      }
                    ]
                  }
                ]
              }
            event: always


  build-frontend:    
    <<: *docker
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |   
            cd ~/project/frontend && npm i         
            npm run build           
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    <<: *docker
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |      
             cd ~/project/backend && npm i               
             npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-frontend:     
    # Docker image here
    <<: *docker
    steps:
      # Checkout code from git
      - checkout
      # Restore from cache
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      # Your job code here
      - run:
          name: Run tests with JUnit as reporter
          command: | 
            cd ~/project/frontend && npm i  
            npm run test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/

  test-backend:
    # Docker image here
    <<: *docker
    steps:
      # Checkout code from git
      - checkout
      # Restore from cache
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      # Your job code here
      - run:
          name: Run tests with JUnit as reporter
          command: |  
            cd ~/project/backend && npm i  
            npm run test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
  
  scan-frontend:
    # Docker image here
    <<: *docker
    steps:
      # Checkout code from git
      - checkout
      # Restore from cache
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      # Your job code here
      - run:
          name: Run frontend scan
          command: |  
            cd ~/project/backend && npm i  
            npm audit --audit-level=critical

  scan-backend:
    # Docker image here
    <<: *docker
    steps:
      # Checkout code from git
      - checkout
      # Restore from cache
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      # Your job code here
      - run:
          name: Run backend scan
          command: |  
            cd ~/project/backend && npm i  
            npm audit --audit-level=critical

workflows:
  send-notification:
    jobs:
      - notify:
          context: slack-secrets
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
          post-steps:
            - slack/status:
                fail_only: 'true'
                mentions: 'USERID1,USERID2'
                only_for_branch: only_for_branch
                webhook: webhook
      - test-backend:
          requires: [build-backend]
          post-steps:
            - slack/status:
                fail_only: 'true'
                mentions: 'USERID1,USERID2'
                only_for_branch: only_for_branch
                webhook: webhook
      - scan-frontend:
          requires: [build-frontend]
      - scan-backend:
          requires: [build-backend]
      